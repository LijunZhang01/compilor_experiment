Terminals unused in grammar

   T_STRING


State 21 conflicts: 1 shift/reduce
State 60 conflicts: 2 shift/reduce
State 61 conflicts: 3 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 3 shift/reduce
State 86 conflicts: 4 shift/reduce
State 131 conflicts: 3 shift/reduce
State 132 conflicts: 3 shift/reduce
State 161 conflicts: 4 shift/reduce
State 162 conflicts: 4 shift/reduce
State 198 conflicts: 24 shift/reduce
State 199 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl
    2        | funcDef
    3        | program decl
    4        | program funcDef

    5 basicType: T_INT
    6          | T_CHAR
    7          | T_BOOL
    8          | T_VOID

    9 literalConst: INTEGER
   10             | BOOL
   11             | CHAR
   12             | STRING

   13 compIdentifier: pIdentifier
   14               | arrayIdentifier

   15 pIdentifier: identifier
   16            | MUL pIdentifier
   17            | ADDR pIdentifier

   18 arrayIdentifier: pIdentifier LBRACKET expr RBRACKET
   19                | arrayIdentifier LBRACKET expr RBRACKET

   20 identifier: IDENTIFIER

   21 declCompIdentifier: pDeclIdentifier
   22                   | constArrayIdentifier

   23 pDeclIdentifier: declIdentifier
   24                | MUL pDeclIdentifier
   25                | ADDR pDeclIdentifier

   26 constArrayIdentifier: pDeclIdentifier LBRACKET INTEGER RBRACKET
   27                     | constArrayIdentifier LBRACKET INTEGER RBRACKET

   28 declIdentifier: IDENTIFIER

   29 decl: constDecl
   30     | varDecl

   31 constDecl: CONST basicType constDefs SEMICOLON

   32 constDefs: constDef
   33          | constDefs COMMA constDef

   34 constDef: pDeclIdentifier ASSIGN literalConst
   35         | constArrayIdentifier ASSIGN LBRACE ArrayInitVal RBRACE

   36 ArrayInitVal: literalConst
   37             | ArrayInitVal COMMA literalConst

   38 varDecl: basicType varDefs SEMICOLON

   39 varDefs: varDef
   40        | varDefs COMMA varDef

   41 varDef: declCompIdentifier
   42       | declCompIdentifier ASSIGN expr
   43       | constArrayIdentifier ASSIGN LBRACE ArrayInitVal RBRACE

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   45        | basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE

   46 funcLPAREN: LPAREN

   47 funcFParams: funcFParam
   48            | funcFParams COMMA funcFParam

   49 funcFParam: basicType pDeclIdentifier

   50 block: blockLBRACE blockItems blockRBRACE

   51 blockLBRACE: LBRACE

   52 blockRBRACE: RBRACE

   53 blockItems: blockItem
   54           | blockItems blockItem

   55 blockItem: decl
   56          | stmt

   57 stmt_: LBRACE blockItems RBRACE
   58      | stmt

   59 stmt: SEMICOLON
   60     | expr SEMICOLON
   61     | block
   62     | IF LPAREN cond RPAREN stmt_ ELSE stmt_
   63     | IF LPAREN cond RPAREN stmt_
   64     | WHILE LPAREN cond RPAREN stmt_
   65     | FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   66     | FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_
   67     | BREAK SEMICOLON
   68     | CONTINUE SEMICOLON
   69     | RETURN SEMICOLON
   70     | RETURN expr SEMICOLON

   71 IF: IF_

   72 WHILE: WHILE_

   73 FOR: FOR_

   74 expr: addExpr
   75     | compIdentifier ASSIGN expr
   76     | compIdentifier PLUSASSIGN expr
   77     | compIdentifier MINUSASSIGN expr
   78     | compIdentifier MULASSIGN expr
   79     | compIdentifier DIVASSIGN expr

   80 cond: LOrExpr

   81 addExpr: mulExpr
   82        | addExpr PLUS mulExpr
   83        | addExpr MINUS mulExpr

   84 mulExpr: unaryExpr
   85        | mulExpr MUL unaryExpr
   86        | mulExpr DIV unaryExpr
   87        | mulExpr MOD unaryExpr

   88 unaryExpr: primaryExpr
   89          | PLUS expr
   90          | MINUS expr
   91          | NOT cond
   92          | pIdentifier INC
   93          | pIdentifier DEC

   94 primaryExpr: LPAREN expr RPAREN
   95            | pIdentifier LPAREN funcRParams RPAREN
   96            | pIdentifier LPAREN RPAREN
   97            | compIdentifier
   98            | literalConst

   99 funcRParams: expr
  100            | funcRParams COMMA expr

  101 LOrExpr: LAndExpr
  102        | LAndExpr OR LOrExpr

  103 LAndExpr: eqExpr
  104         | eqExpr AND LAndExpr

  105 eqExpr: relExpr
  106       | eqExpr EQ relExpr
  107       | eqExpr NEQ relExpr

  108 relExpr: expr
  109        | relExpr GRA expr
  110        | relExpr LES expr
  111        | relExpr GRAEQ expr
  112        | relExpr LESEQ expr


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 6
T_INT (259) 5
T_STRING (260)
T_BOOL (261) 7
T_VOID (262) 8
ADDR (263) 17 25
ASSIGN (264) 34 35 42 43 75
PLUSASSIGN (265) 76
MINUSASSIGN (266) 77
MULASSIGN (267) 78
DIVASSIGN (268) 79
SEMICOLON (269) 31 38 59 60 65 66 67 68 69 70
COMMA (270) 33 37 40 48 100
LPAREN (271) 46 62 63 64 65 66 94 95 96
RPAREN (272) 44 45 62 63 64 65 66 94 95 96
LBRACE (273) 35 43 44 45 51 57
RBRACE (274) 35 43 44 45 52 57
LBRACKET (275) 18 19 26 27
RBRACKET (276) 18 19 26 27
CONST (277) 31
IF_ (278) 71
ELSE (279) 62
WHILE_ (280) 72
FOR_ (281) 73
BREAK (282) 67
CONTINUE (283) 68
RETURN (284) 69 70
EQ (285) 106
GRAEQ (286) 111
LESEQ (287) 112
NEQ (288) 107
GRA (289) 109
LES (290) 110
PLUS (291) 82 89
MINUS (292) 83 90
MUL (293) 16 24 85
DIV (294) 86
MOD (295) 87
AND (296) 104
OR (297) 102
NOT (298) 91
INC (299) 92
DEC (300) 93
IDENTIFIER (301) 20 28
INTEGER (302) 9 26 27
CHAR (303) 11
BOOL (304) 10
STRING (305) 12


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2 3 4, on right: 0 3 4
basicType (53)
    on left: 5 6 7 8, on right: 31 38 44 45 49 65
literalConst (54)
    on left: 9 10 11 12, on right: 34 36 37 98
compIdentifier (55)
    on left: 13 14, on right: 75 76 77 78 79 97
pIdentifier (56)
    on left: 15 16 17, on right: 13 16 17 18 92 93 95 96
arrayIdentifier (57)
    on left: 18 19, on right: 14 19
identifier (58)
    on left: 20, on right: 15
declCompIdentifier (59)
    on left: 21 22, on right: 41 42
pDeclIdentifier (60)
    on left: 23 24 25, on right: 21 24 25 26 34 44 45 49
constArrayIdentifier (61)
    on left: 26 27, on right: 22 27 35 43
declIdentifier (62)
    on left: 28, on right: 23
decl (63)
    on left: 29 30, on right: 1 3 55
constDecl (64)
    on left: 31, on right: 29
constDefs (65)
    on left: 32 33, on right: 31 33
constDef (66)
    on left: 34 35, on right: 32 33
ArrayInitVal (67)
    on left: 36 37, on right: 35 37 43
varDecl (68)
    on left: 38, on right: 30
varDefs (69)
    on left: 39 40, on right: 38 40 65
varDef (70)
    on left: 41 42 43, on right: 39 40
funcDef (71)
    on left: 44 45, on right: 2 4
funcLPAREN (72)
    on left: 46, on right: 44 45
funcFParams (73)
    on left: 47 48, on right: 44 48
funcFParam (74)
    on left: 49, on right: 47 48
block (75)
    on left: 50, on right: 61
blockLBRACE (76)
    on left: 51, on right: 50
blockRBRACE (77)
    on left: 52, on right: 50
blockItems (78)
    on left: 53 54, on right: 44 45 50 54 57
blockItem (79)
    on left: 55 56, on right: 53 54
stmt_ (80)
    on left: 57 58, on right: 62 63 64 65 66
stmt (81)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70, on right: 56 58
IF (82)
    on left: 71, on right: 62 63
WHILE (83)
    on left: 72, on right: 64
FOR (84)
    on left: 73, on right: 65 66
expr (85)
    on left: 74 75 76 77 78 79, on right: 18 19 42 60 65 66 70 75 76
    77 78 79 89 90 94 99 100 108 109 110 111 112
cond (86)
    on left: 80, on right: 62 63 64 65 66 91
addExpr (87)
    on left: 81 82 83, on right: 74 82 83
mulExpr (88)
    on left: 84 85 86 87, on right: 81 82 83 85 86 87
unaryExpr (89)
    on left: 88 89 90 91 92 93, on right: 84 85 86 87
primaryExpr (90)
    on left: 94 95 96 97 98, on right: 88
funcRParams (91)
    on left: 99 100, on right: 95 100
LOrExpr (92)
    on left: 101 102, on right: 80 102
LAndExpr (93)
    on left: 103 104, on right: 101 102 104
eqExpr (94)
    on left: 105 106 107, on right: 103 104 106 107
relExpr (95)
    on left: 108 109 110 111 112, on right: 105 106 107 109 110 111
    112


State 0

    0 $accept: . program $end

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    CONST   shift, and go to state 5

    program    go to state 6
    basicType  go to state 7
    decl       go to state 8
    constDecl  go to state 9
    varDecl    go to state 10
    funcDef    go to state 11


State 1

    6 basicType: T_CHAR .

    $default  reduce using rule 6 (basicType)


State 2

    5 basicType: T_INT .

    $default  reduce using rule 5 (basicType)


State 3

    7 basicType: T_BOOL .

    $default  reduce using rule 7 (basicType)


State 4

    8 basicType: T_VOID .

    $default  reduce using rule 8 (basicType)


State 5

   31 constDecl: CONST . basicType constDefs SEMICOLON

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4

    basicType  go to state 12


State 6

    0 $accept: program . $end
    3 program: program . decl
    4        | program . funcDef

    $end    shift, and go to state 13
    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    CONST   shift, and go to state 5

    basicType  go to state 7
    decl       go to state 14
    constDecl  go to state 9
    varDecl    go to state 10
    funcDef    go to state 15


State 7

   38 varDecl: basicType . varDefs SEMICOLON
   44 funcDef: basicType . pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   45        | basicType . pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier    go to state 19
    pDeclIdentifier       go to state 20
    constArrayIdentifier  go to state 21
    declIdentifier        go to state 22
    varDefs               go to state 23
    varDef                go to state 24


State 8

    1 program: decl .

    $default  reduce using rule 1 (program)


State 9

   29 decl: constDecl .

    $default  reduce using rule 29 (decl)


State 10

   30 decl: varDecl .

    $default  reduce using rule 30 (decl)


State 11

    2 program: funcDef .

    $default  reduce using rule 2 (program)


State 12

   31 constDecl: CONST basicType . constDefs SEMICOLON

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier       go to state 25
    constArrayIdentifier  go to state 26
    declIdentifier        go to state 22
    constDefs             go to state 27
    constDef              go to state 28


State 13

    0 $accept: program $end .

    $default  accept


State 14

    3 program: program decl .

    $default  reduce using rule 3 (program)


State 15

    4 program: program funcDef .

    $default  reduce using rule 4 (program)


State 16

   25 pDeclIdentifier: ADDR . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 29
    declIdentifier   go to state 22


State 17

   24 pDeclIdentifier: MUL . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 30
    declIdentifier   go to state 22


State 18

   28 declIdentifier: IDENTIFIER .

    $default  reduce using rule 28 (declIdentifier)


State 19

   41 varDef: declCompIdentifier .
   42       | declCompIdentifier . ASSIGN expr

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 41 (varDef)


State 20

   21 declCompIdentifier: pDeclIdentifier .
   26 constArrayIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET
   44 funcDef: basicType pDeclIdentifier . funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   45        | basicType pDeclIdentifier . funcLPAREN RPAREN LBRACE blockItems RBRACE

    LPAREN    shift, and go to state 32
    LBRACKET  shift, and go to state 33

    $default  reduce using rule 21 (declCompIdentifier)

    funcLPAREN  go to state 34


State 21

   22 declCompIdentifier: constArrayIdentifier .
   27 constArrayIdentifier: constArrayIdentifier . LBRACKET INTEGER RBRACKET
   43 varDef: constArrayIdentifier . ASSIGN LBRACE ArrayInitVal RBRACE

    ASSIGN    shift, and go to state 35
    LBRACKET  shift, and go to state 36

    ASSIGN    [reduce using rule 22 (declCompIdentifier)]
    $default  reduce using rule 22 (declCompIdentifier)


State 22

   23 pDeclIdentifier: declIdentifier .

    $default  reduce using rule 23 (pDeclIdentifier)


State 23

   38 varDecl: basicType varDefs . SEMICOLON
   40 varDefs: varDefs . COMMA varDef

    SEMICOLON  shift, and go to state 37
    COMMA      shift, and go to state 38


State 24

   39 varDefs: varDef .

    $default  reduce using rule 39 (varDefs)


State 25

   26 constArrayIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET
   34 constDef: pDeclIdentifier . ASSIGN literalConst

    ASSIGN    shift, and go to state 39
    LBRACKET  shift, and go to state 33


State 26

   27 constArrayIdentifier: constArrayIdentifier . LBRACKET INTEGER RBRACKET
   35 constDef: constArrayIdentifier . ASSIGN LBRACE ArrayInitVal RBRACE

    ASSIGN    shift, and go to state 40
    LBRACKET  shift, and go to state 36


State 27

   31 constDecl: CONST basicType constDefs . SEMICOLON
   33 constDefs: constDefs . COMMA constDef

    SEMICOLON  shift, and go to state 41
    COMMA      shift, and go to state 42


State 28

   32 constDefs: constDef .

    $default  reduce using rule 32 (constDefs)


State 29

   25 pDeclIdentifier: ADDR pDeclIdentifier .

    $default  reduce using rule 25 (pDeclIdentifier)


State 30

   24 pDeclIdentifier: MUL pDeclIdentifier .

    $default  reduce using rule 24 (pDeclIdentifier)


State 31

   42 varDef: declCompIdentifier ASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 59
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 32

   46 funcLPAREN: LPAREN .

    $default  reduce using rule 46 (funcLPAREN)


State 33

   26 constArrayIdentifier: pDeclIdentifier LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 64


State 34

   44 funcDef: basicType pDeclIdentifier funcLPAREN . funcFParams RPAREN LBRACE blockItems RBRACE
   45        | basicType pDeclIdentifier funcLPAREN . RPAREN LBRACE blockItems RBRACE

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    RPAREN  shift, and go to state 65

    basicType    go to state 66
    funcFParams  go to state 67
    funcFParam   go to state 68


State 35

   43 varDef: constArrayIdentifier ASSIGN . LBRACE ArrayInitVal RBRACE

    LBRACE  shift, and go to state 69


State 36

   27 constArrayIdentifier: constArrayIdentifier LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 70


State 37

   38 varDecl: basicType varDefs SEMICOLON .

    $default  reduce using rule 38 (varDecl)


State 38

   40 varDefs: varDefs COMMA . varDef

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier    go to state 19
    pDeclIdentifier       go to state 71
    constArrayIdentifier  go to state 21
    declIdentifier        go to state 22
    varDef                go to state 72


State 39

   34 constDef: pDeclIdentifier ASSIGN . literalConst

    INTEGER  shift, and go to state 50
    CHAR     shift, and go to state 51
    BOOL     shift, and go to state 52
    STRING   shift, and go to state 53

    literalConst  go to state 73


State 40

   35 constDef: constArrayIdentifier ASSIGN . LBRACE ArrayInitVal RBRACE

    LBRACE  shift, and go to state 74


State 41

   31 constDecl: CONST basicType constDefs SEMICOLON .

    $default  reduce using rule 31 (constDecl)


State 42

   33 constDefs: constDefs COMMA . constDef

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier       go to state 25
    constArrayIdentifier  go to state 26
    declIdentifier        go to state 22
    constDef              go to state 75


State 43

   17 pIdentifier: ADDR . pIdentifier

    ADDR        shift, and go to state 43
    MUL         shift, and go to state 47
    IDENTIFIER  shift, and go to state 49

    pIdentifier  go to state 76
    identifier   go to state 58


State 44

   94 primaryExpr: LPAREN . expr RPAREN

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 77
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 45

   89 unaryExpr: PLUS . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 78
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 46

   90 unaryExpr: MINUS . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 79
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 47

   16 pIdentifier: MUL . pIdentifier

    ADDR        shift, and go to state 43
    MUL         shift, and go to state 47
    IDENTIFIER  shift, and go to state 49

    pIdentifier  go to state 80
    identifier   go to state 58


State 48

   91 unaryExpr: NOT . cond

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    cond             go to state 82
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 83
    LAndExpr         go to state 84
    eqExpr           go to state 85
    relExpr          go to state 86


State 49

   20 identifier: IDENTIFIER .

    $default  reduce using rule 20 (identifier)


State 50

    9 literalConst: INTEGER .

    $default  reduce using rule 9 (literalConst)


State 51

   11 literalConst: CHAR .

    $default  reduce using rule 11 (literalConst)


State 52

   10 literalConst: BOOL .

    $default  reduce using rule 10 (literalConst)


State 53

   12 literalConst: STRING .

    $default  reduce using rule 12 (literalConst)


State 54

   98 primaryExpr: literalConst .

    $default  reduce using rule 98 (primaryExpr)


State 55

   75 expr: compIdentifier . ASSIGN expr
   76     | compIdentifier . PLUSASSIGN expr
   77     | compIdentifier . MINUSASSIGN expr
   78     | compIdentifier . MULASSIGN expr
   79     | compIdentifier . DIVASSIGN expr
   97 primaryExpr: compIdentifier .

    ASSIGN       shift, and go to state 87
    PLUSASSIGN   shift, and go to state 88
    MINUSASSIGN  shift, and go to state 89
    MULASSIGN    shift, and go to state 90
    DIVASSIGN    shift, and go to state 91

    $default  reduce using rule 97 (primaryExpr)


State 56

   13 compIdentifier: pIdentifier .
   18 arrayIdentifier: pIdentifier . LBRACKET expr RBRACKET
   92 unaryExpr: pIdentifier . INC
   93          | pIdentifier . DEC
   95 primaryExpr: pIdentifier . LPAREN funcRParams RPAREN
   96            | pIdentifier . LPAREN RPAREN

    LPAREN    shift, and go to state 92
    LBRACKET  shift, and go to state 93
    INC       shift, and go to state 94
    DEC       shift, and go to state 95

    $default  reduce using rule 13 (compIdentifier)


State 57

   14 compIdentifier: arrayIdentifier .
   19 arrayIdentifier: arrayIdentifier . LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 96

    $default  reduce using rule 14 (compIdentifier)


State 58

   15 pIdentifier: identifier .

    $default  reduce using rule 15 (pIdentifier)


State 59

   42 varDef: declCompIdentifier ASSIGN expr .

    $default  reduce using rule 42 (varDef)


State 60

   74 expr: addExpr .
   82 addExpr: addExpr . PLUS mulExpr
   83        | addExpr . MINUS mulExpr

    PLUS   shift, and go to state 97
    MINUS  shift, and go to state 98

    PLUS      [reduce using rule 74 (expr)]
    MINUS     [reduce using rule 74 (expr)]
    $default  reduce using rule 74 (expr)


State 61

   81 addExpr: mulExpr .
   85 mulExpr: mulExpr . MUL unaryExpr
   86        | mulExpr . DIV unaryExpr
   87        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 99
    DIV  shift, and go to state 100
    MOD  shift, and go to state 101

    MUL       [reduce using rule 81 (addExpr)]
    DIV       [reduce using rule 81 (addExpr)]
    MOD       [reduce using rule 81 (addExpr)]
    $default  reduce using rule 81 (addExpr)


State 62

   84 mulExpr: unaryExpr .

    $default  reduce using rule 84 (mulExpr)


State 63

   88 unaryExpr: primaryExpr .

    $default  reduce using rule 88 (unaryExpr)


State 64

   26 constArrayIdentifier: pDeclIdentifier LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 102


State 65

   45 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN . LBRACE blockItems RBRACE

    LBRACE  shift, and go to state 103


State 66

   49 funcFParam: basicType . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 104
    declIdentifier   go to state 22


State 67

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams . RPAREN LBRACE blockItems RBRACE
   48 funcFParams: funcFParams . COMMA funcFParam

    COMMA   shift, and go to state 105
    RPAREN  shift, and go to state 106


State 68

   47 funcFParams: funcFParam .

    $default  reduce using rule 47 (funcFParams)


State 69

   43 varDef: constArrayIdentifier ASSIGN LBRACE . ArrayInitVal RBRACE

    INTEGER  shift, and go to state 50
    CHAR     shift, and go to state 51
    BOOL     shift, and go to state 52
    STRING   shift, and go to state 53

    literalConst  go to state 107
    ArrayInitVal  go to state 108


State 70

   27 constArrayIdentifier: constArrayIdentifier LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 109


State 71

   21 declCompIdentifier: pDeclIdentifier .
   26 constArrayIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET

    LBRACKET  shift, and go to state 33

    $default  reduce using rule 21 (declCompIdentifier)


State 72

   40 varDefs: varDefs COMMA varDef .

    $default  reduce using rule 40 (varDefs)


State 73

   34 constDef: pDeclIdentifier ASSIGN literalConst .

    $default  reduce using rule 34 (constDef)


State 74

   35 constDef: constArrayIdentifier ASSIGN LBRACE . ArrayInitVal RBRACE

    INTEGER  shift, and go to state 50
    CHAR     shift, and go to state 51
    BOOL     shift, and go to state 52
    STRING   shift, and go to state 53

    literalConst  go to state 107
    ArrayInitVal  go to state 110


State 75

   33 constDefs: constDefs COMMA constDef .

    $default  reduce using rule 33 (constDefs)


State 76

   17 pIdentifier: ADDR pIdentifier .

    $default  reduce using rule 17 (pIdentifier)


State 77

   94 primaryExpr: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 111


State 78

   89 unaryExpr: PLUS expr .

    $default  reduce using rule 89 (unaryExpr)


State 79

   90 unaryExpr: MINUS expr .

    $default  reduce using rule 90 (unaryExpr)


State 80

   16 pIdentifier: MUL pIdentifier .

    $default  reduce using rule 16 (pIdentifier)


State 81

  108 relExpr: expr .

    $default  reduce using rule 108 (relExpr)


State 82

   91 unaryExpr: NOT cond .

    $default  reduce using rule 91 (unaryExpr)


State 83

   80 cond: LOrExpr .

    $default  reduce using rule 80 (cond)


State 84

  101 LOrExpr: LAndExpr .
  102        | LAndExpr . OR LOrExpr

    OR  shift, and go to state 112

    OR        [reduce using rule 101 (LOrExpr)]
    $default  reduce using rule 101 (LOrExpr)


State 85

  103 LAndExpr: eqExpr .
  104         | eqExpr . AND LAndExpr
  106 eqExpr: eqExpr . EQ relExpr
  107       | eqExpr . NEQ relExpr

    EQ   shift, and go to state 113
    NEQ  shift, and go to state 114
    AND  shift, and go to state 115

    EQ        [reduce using rule 103 (LAndExpr)]
    NEQ       [reduce using rule 103 (LAndExpr)]
    AND       [reduce using rule 103 (LAndExpr)]
    $default  reduce using rule 103 (LAndExpr)


State 86

  105 eqExpr: relExpr .
  109 relExpr: relExpr . GRA expr
  110        | relExpr . LES expr
  111        | relExpr . GRAEQ expr
  112        | relExpr . LESEQ expr

    GRAEQ  shift, and go to state 116
    LESEQ  shift, and go to state 117
    GRA    shift, and go to state 118
    LES    shift, and go to state 119

    GRAEQ     [reduce using rule 105 (eqExpr)]
    LESEQ     [reduce using rule 105 (eqExpr)]
    GRA       [reduce using rule 105 (eqExpr)]
    LES       [reduce using rule 105 (eqExpr)]
    $default  reduce using rule 105 (eqExpr)


State 87

   75 expr: compIdentifier ASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 120
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 88

   76 expr: compIdentifier PLUSASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 121
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 89

   77 expr: compIdentifier MINUSASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 122
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 90

   78 expr: compIdentifier MULASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 123
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 91

   79 expr: compIdentifier DIVASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 124
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 92

   95 primaryExpr: pIdentifier LPAREN . funcRParams RPAREN
   96            | pIdentifier LPAREN . RPAREN

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    RPAREN      shift, and go to state 125
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 126
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    funcRParams      go to state 127


State 93

   18 arrayIdentifier: pIdentifier LBRACKET . expr RBRACKET

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 128
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 94

   92 unaryExpr: pIdentifier INC .

    $default  reduce using rule 92 (unaryExpr)


State 95

   93 unaryExpr: pIdentifier DEC .

    $default  reduce using rule 93 (unaryExpr)


State 96

   19 arrayIdentifier: arrayIdentifier LBRACKET . expr RBRACKET

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 129
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 97

   82 addExpr: addExpr PLUS . mulExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 130
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    mulExpr          go to state 131
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 98

   83 addExpr: addExpr MINUS . mulExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 130
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    mulExpr          go to state 132
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 99

   85 mulExpr: mulExpr MUL . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 130
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    unaryExpr        go to state 133
    primaryExpr      go to state 63


State 100

   86 mulExpr: mulExpr DIV . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 130
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    unaryExpr        go to state 134
    primaryExpr      go to state 63


State 101

   87 mulExpr: mulExpr MOD . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 130
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    unaryExpr        go to state 135
    primaryExpr      go to state 63


State 102

   26 constArrayIdentifier: pDeclIdentifier LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 26 (constArrayIdentifier)


State 103

   45 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 137
    CONST       shift, and go to state 5
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 144
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 145
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 146
    blockLBRACE      go to state 147
    blockItems       go to state 148
    blockItem        go to state 149
    stmt             go to state 150
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 104

   49 funcFParam: basicType pDeclIdentifier .

    $default  reduce using rule 49 (funcFParam)


State 105

   48 funcFParams: funcFParams COMMA . funcFParam

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4

    basicType   go to state 66
    funcFParam  go to state 155


State 106

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN . LBRACE blockItems RBRACE

    LBRACE  shift, and go to state 156


State 107

   36 ArrayInitVal: literalConst .

    $default  reduce using rule 36 (ArrayInitVal)


State 108

   37 ArrayInitVal: ArrayInitVal . COMMA literalConst
   43 varDef: constArrayIdentifier ASSIGN LBRACE ArrayInitVal . RBRACE

    COMMA   shift, and go to state 157
    RBRACE  shift, and go to state 158


State 109

   27 constArrayIdentifier: constArrayIdentifier LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 27 (constArrayIdentifier)


State 110

   35 constDef: constArrayIdentifier ASSIGN LBRACE ArrayInitVal . RBRACE
   37 ArrayInitVal: ArrayInitVal . COMMA literalConst

    COMMA   shift, and go to state 157
    RBRACE  shift, and go to state 159


State 111

   94 primaryExpr: LPAREN expr RPAREN .

    $default  reduce using rule 94 (primaryExpr)


State 112

  102 LOrExpr: LAndExpr OR . LOrExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 160
    LAndExpr         go to state 84
    eqExpr           go to state 85
    relExpr          go to state 86


State 113

  106 eqExpr: eqExpr EQ . relExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    relExpr          go to state 161


State 114

  107 eqExpr: eqExpr NEQ . relExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    relExpr          go to state 162


State 115

  104 LAndExpr: eqExpr AND . LAndExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LAndExpr         go to state 163
    eqExpr           go to state 85
    relExpr          go to state 86


State 116

  111 relExpr: relExpr GRAEQ . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 164
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 117

  112 relExpr: relExpr LESEQ . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 165
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 118

  109 relExpr: relExpr GRA . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 166
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 119

  110 relExpr: relExpr LES . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 167
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 120

   75 expr: compIdentifier ASSIGN expr .

    $default  reduce using rule 75 (expr)


State 121

   76 expr: compIdentifier PLUSASSIGN expr .

    $default  reduce using rule 76 (expr)


State 122

   77 expr: compIdentifier MINUSASSIGN expr .

    $default  reduce using rule 77 (expr)


State 123

   78 expr: compIdentifier MULASSIGN expr .

    $default  reduce using rule 78 (expr)


State 124

   79 expr: compIdentifier DIVASSIGN expr .

    $default  reduce using rule 79 (expr)


State 125

   96 primaryExpr: pIdentifier LPAREN RPAREN .

    $default  reduce using rule 96 (primaryExpr)


State 126

   99 funcRParams: expr .

    $default  reduce using rule 99 (funcRParams)


State 127

   95 primaryExpr: pIdentifier LPAREN funcRParams . RPAREN
  100 funcRParams: funcRParams . COMMA expr

    COMMA   shift, and go to state 168
    RPAREN  shift, and go to state 169


State 128

   18 arrayIdentifier: pIdentifier LBRACKET expr . RBRACKET

    RBRACKET  shift, and go to state 170


State 129

   19 arrayIdentifier: arrayIdentifier LBRACKET expr . RBRACKET

    RBRACKET  shift, and go to state 171


State 130

   97 primaryExpr: compIdentifier .

    $default  reduce using rule 97 (primaryExpr)


State 131

   82 addExpr: addExpr PLUS mulExpr .
   85 mulExpr: mulExpr . MUL unaryExpr
   86        | mulExpr . DIV unaryExpr
   87        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 99
    DIV  shift, and go to state 100
    MOD  shift, and go to state 101

    MUL       [reduce using rule 82 (addExpr)]
    DIV       [reduce using rule 82 (addExpr)]
    MOD       [reduce using rule 82 (addExpr)]
    $default  reduce using rule 82 (addExpr)


State 132

   83 addExpr: addExpr MINUS mulExpr .
   85 mulExpr: mulExpr . MUL unaryExpr
   86        | mulExpr . DIV unaryExpr
   87        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 99
    DIV  shift, and go to state 100
    MOD  shift, and go to state 101

    MUL       [reduce using rule 83 (addExpr)]
    DIV       [reduce using rule 83 (addExpr)]
    MOD       [reduce using rule 83 (addExpr)]
    $default  reduce using rule 83 (addExpr)


State 133

   85 mulExpr: mulExpr MUL unaryExpr .

    $default  reduce using rule 85 (mulExpr)


State 134

   86 mulExpr: mulExpr DIV unaryExpr .

    $default  reduce using rule 86 (mulExpr)


State 135

   87 mulExpr: mulExpr MOD unaryExpr .

    $default  reduce using rule 87 (mulExpr)


State 136

   59 stmt: SEMICOLON .

    $default  reduce using rule 59 (stmt)


State 137

   51 blockLBRACE: LBRACE .

    $default  reduce using rule 51 (blockLBRACE)


State 138

   71 IF: IF_ .

    $default  reduce using rule 71 (IF)


State 139

   72 WHILE: WHILE_ .

    $default  reduce using rule 72 (WHILE)


State 140

   73 FOR: FOR_ .

    $default  reduce using rule 73 (FOR)


State 141

   67 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 172


State 142

   68 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 173


State 143

   69 stmt: RETURN . SEMICOLON
   70     | RETURN . expr SEMICOLON

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 174
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 175
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 144

   38 varDecl: basicType . varDefs SEMICOLON

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier    go to state 19
    pDeclIdentifier       go to state 71
    constArrayIdentifier  go to state 21
    declIdentifier        go to state 22
    varDefs               go to state 23
    varDef                go to state 24


State 145

   55 blockItem: decl .

    $default  reduce using rule 55 (blockItem)


State 146

   61 stmt: block .

    $default  reduce using rule 61 (stmt)


State 147

   50 block: blockLBRACE . blockItems blockRBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 137
    CONST       shift, and go to state 5
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 144
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 145
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 146
    blockLBRACE      go to state 147
    blockItems       go to state 176
    blockItem        go to state 149
    stmt             go to state 150
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 148

   45 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems . RBRACE
   54 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 137
    RBRACE      shift, and go to state 177
    CONST       shift, and go to state 5
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 144
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 145
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 146
    blockLBRACE      go to state 147
    blockItem        go to state 178
    stmt             go to state 150
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 149

   53 blockItems: blockItem .

    $default  reduce using rule 53 (blockItems)


State 150

   56 blockItem: stmt .

    $default  reduce using rule 56 (blockItem)


State 151

   62 stmt: IF . LPAREN cond RPAREN stmt_ ELSE stmt_
   63     | IF . LPAREN cond RPAREN stmt_

    LPAREN  shift, and go to state 179


State 152

   64 stmt: WHILE . LPAREN cond RPAREN stmt_

    LPAREN  shift, and go to state 180


State 153

   65 stmt: FOR . LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   66     | FOR . LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_

    LPAREN  shift, and go to state 181


State 154

   60 stmt: expr . SEMICOLON

    SEMICOLON  shift, and go to state 182


State 155

   48 funcFParams: funcFParams COMMA funcFParam .

    $default  reduce using rule 48 (funcFParams)


State 156

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 137
    CONST       shift, and go to state 5
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 144
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 145
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 146
    blockLBRACE      go to state 147
    blockItems       go to state 183
    blockItem        go to state 149
    stmt             go to state 150
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 157

   37 ArrayInitVal: ArrayInitVal COMMA . literalConst

    INTEGER  shift, and go to state 50
    CHAR     shift, and go to state 51
    BOOL     shift, and go to state 52
    STRING   shift, and go to state 53

    literalConst  go to state 184


State 158

   43 varDef: constArrayIdentifier ASSIGN LBRACE ArrayInitVal RBRACE .

    $default  reduce using rule 43 (varDef)


State 159

   35 constDef: constArrayIdentifier ASSIGN LBRACE ArrayInitVal RBRACE .

    $default  reduce using rule 35 (constDef)


State 160

  102 LOrExpr: LAndExpr OR LOrExpr .

    $default  reduce using rule 102 (LOrExpr)


State 161

  106 eqExpr: eqExpr EQ relExpr .
  109 relExpr: relExpr . GRA expr
  110        | relExpr . LES expr
  111        | relExpr . GRAEQ expr
  112        | relExpr . LESEQ expr

    GRAEQ  shift, and go to state 116
    LESEQ  shift, and go to state 117
    GRA    shift, and go to state 118
    LES    shift, and go to state 119

    GRAEQ     [reduce using rule 106 (eqExpr)]
    LESEQ     [reduce using rule 106 (eqExpr)]
    GRA       [reduce using rule 106 (eqExpr)]
    LES       [reduce using rule 106 (eqExpr)]
    $default  reduce using rule 106 (eqExpr)


State 162

  107 eqExpr: eqExpr NEQ relExpr .
  109 relExpr: relExpr . GRA expr
  110        | relExpr . LES expr
  111        | relExpr . GRAEQ expr
  112        | relExpr . LESEQ expr

    GRAEQ  shift, and go to state 116
    LESEQ  shift, and go to state 117
    GRA    shift, and go to state 118
    LES    shift, and go to state 119

    GRAEQ     [reduce using rule 107 (eqExpr)]
    LESEQ     [reduce using rule 107 (eqExpr)]
    GRA       [reduce using rule 107 (eqExpr)]
    LES       [reduce using rule 107 (eqExpr)]
    $default  reduce using rule 107 (eqExpr)


State 163

  104 LAndExpr: eqExpr AND LAndExpr .

    $default  reduce using rule 104 (LAndExpr)


State 164

  111 relExpr: relExpr GRAEQ expr .

    $default  reduce using rule 111 (relExpr)


State 165

  112 relExpr: relExpr LESEQ expr .

    $default  reduce using rule 112 (relExpr)


State 166

  109 relExpr: relExpr GRA expr .

    $default  reduce using rule 109 (relExpr)


State 167

  110 relExpr: relExpr LES expr .

    $default  reduce using rule 110 (relExpr)


State 168

  100 funcRParams: funcRParams COMMA . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 185
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 169

   95 primaryExpr: pIdentifier LPAREN funcRParams RPAREN .

    $default  reduce using rule 95 (primaryExpr)


State 170

   18 arrayIdentifier: pIdentifier LBRACKET expr RBRACKET .

    $default  reduce using rule 18 (arrayIdentifier)


State 171

   19 arrayIdentifier: arrayIdentifier LBRACKET expr RBRACKET .

    $default  reduce using rule 19 (arrayIdentifier)


State 172

   67 stmt: BREAK SEMICOLON .

    $default  reduce using rule 67 (stmt)


State 173

   68 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 68 (stmt)


State 174

   69 stmt: RETURN SEMICOLON .

    $default  reduce using rule 69 (stmt)


State 175

   70 stmt: RETURN expr . SEMICOLON

    SEMICOLON  shift, and go to state 186


State 176

   50 block: blockLBRACE blockItems . blockRBRACE
   54 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 137
    RBRACE      shift, and go to state 187
    CONST       shift, and go to state 5
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 144
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 145
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 146
    blockLBRACE      go to state 147
    blockRBRACE      go to state 188
    blockItem        go to state 178
    stmt             go to state 150
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 177

   45 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE .

    $default  reduce using rule 45 (funcDef)


State 178

   54 blockItems: blockItems blockItem .

    $default  reduce using rule 54 (blockItems)


State 179

   62 stmt: IF LPAREN . cond RPAREN stmt_ ELSE stmt_
   63     | IF LPAREN . cond RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    cond             go to state 189
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 83
    LAndExpr         go to state 84
    eqExpr           go to state 85
    relExpr          go to state 86


State 180

   64 stmt: WHILE LPAREN . cond RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    cond             go to state 190
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 83
    LAndExpr         go to state 84
    eqExpr           go to state 85
    relExpr          go to state 86


State 181

   65 stmt: FOR LPAREN . basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   66     | FOR LPAREN . expr SEMICOLON cond SEMICOLON expr RPAREN stmt_

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 191
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 192
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 182

   60 stmt: expr SEMICOLON .

    $default  reduce using rule 60 (stmt)


State 183

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems . RBRACE
   54 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 137
    RBRACE      shift, and go to state 193
    CONST       shift, and go to state 5
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 144
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 145
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 146
    blockLBRACE      go to state 147
    blockItem        go to state 178
    stmt             go to state 150
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 184

   37 ArrayInitVal: ArrayInitVal COMMA literalConst .

    $default  reduce using rule 37 (ArrayInitVal)


State 185

  100 funcRParams: funcRParams COMMA expr .

    $default  reduce using rule 100 (funcRParams)


State 186

   70 stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 70 (stmt)


State 187

   52 blockRBRACE: RBRACE .

    $default  reduce using rule 52 (blockRBRACE)


State 188

   50 block: blockLBRACE blockItems blockRBRACE .

    $default  reduce using rule 50 (block)


State 189

   62 stmt: IF LPAREN cond . RPAREN stmt_ ELSE stmt_
   63     | IF LPAREN cond . RPAREN stmt_

    RPAREN  shift, and go to state 194


State 190

   64 stmt: WHILE LPAREN cond . RPAREN stmt_

    RPAREN  shift, and go to state 195


State 191

   65 stmt: FOR LPAREN basicType . varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier    go to state 19
    pDeclIdentifier       go to state 71
    constArrayIdentifier  go to state 21
    declIdentifier        go to state 22
    varDefs               go to state 196
    varDef                go to state 24


State 192

   66 stmt: FOR LPAREN expr . SEMICOLON cond SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 197


State 193

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE .

    $default  reduce using rule 44 (funcDef)


State 194

   62 stmt: IF LPAREN cond RPAREN . stmt_ ELSE stmt_
   63     | IF LPAREN cond RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 198
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 146
    blockLBRACE      go to state 147
    stmt_            go to state 199
    stmt             go to state 200
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 195

   64 stmt: WHILE LPAREN cond RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 198
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 146
    blockLBRACE      go to state 147
    stmt_            go to state 201
    stmt             go to state 200
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 196

   40 varDefs: varDefs . COMMA varDef
   65 stmt: FOR LPAREN basicType varDefs . SEMICOLON cond SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 202
    COMMA      shift, and go to state 38


State 197

   66 stmt: FOR LPAREN expr SEMICOLON . cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    cond             go to state 203
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 83
    LAndExpr         go to state 84
    eqExpr           go to state 85
    relExpr          go to state 86


State 198

   51 blockLBRACE: LBRACE .
   57 stmt_: LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 137
    CONST       shift, and go to state 5
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    T_CHAR      [reduce using rule 51 (blockLBRACE)]
    T_INT       [reduce using rule 51 (blockLBRACE)]
    T_BOOL      [reduce using rule 51 (blockLBRACE)]
    T_VOID      [reduce using rule 51 (blockLBRACE)]
    ADDR        [reduce using rule 51 (blockLBRACE)]
    SEMICOLON   [reduce using rule 51 (blockLBRACE)]
    LPAREN      [reduce using rule 51 (blockLBRACE)]
    LBRACE      [reduce using rule 51 (blockLBRACE)]
    CONST       [reduce using rule 51 (blockLBRACE)]
    IF_         [reduce using rule 51 (blockLBRACE)]
    WHILE_      [reduce using rule 51 (blockLBRACE)]
    FOR_        [reduce using rule 51 (blockLBRACE)]
    BREAK       [reduce using rule 51 (blockLBRACE)]
    CONTINUE    [reduce using rule 51 (blockLBRACE)]
    RETURN      [reduce using rule 51 (blockLBRACE)]
    PLUS        [reduce using rule 51 (blockLBRACE)]
    MINUS       [reduce using rule 51 (blockLBRACE)]
    MUL         [reduce using rule 51 (blockLBRACE)]
    NOT         [reduce using rule 51 (blockLBRACE)]
    IDENTIFIER  [reduce using rule 51 (blockLBRACE)]
    INTEGER     [reduce using rule 51 (blockLBRACE)]
    CHAR        [reduce using rule 51 (blockLBRACE)]
    BOOL        [reduce using rule 51 (blockLBRACE)]
    STRING      [reduce using rule 51 (blockLBRACE)]

    basicType        go to state 144
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 145
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 146
    blockLBRACE      go to state 147
    blockItems       go to state 204
    blockItem        go to state 149
    stmt             go to state 150
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 199

   62 stmt: IF LPAREN cond RPAREN stmt_ . ELSE stmt_
   63     | IF LPAREN cond RPAREN stmt_ .

    ELSE  shift, and go to state 205

    ELSE      [reduce using rule 63 (stmt)]
    $default  reduce using rule 63 (stmt)


State 200

   58 stmt_: stmt .

    $default  reduce using rule 58 (stmt_)


State 201

   64 stmt: WHILE LPAREN cond RPAREN stmt_ .

    $default  reduce using rule 64 (stmt)


State 202

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON . cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 81
    cond             go to state 206
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 83
    LAndExpr         go to state 84
    eqExpr           go to state 85
    relExpr          go to state 86


State 203

   66 stmt: FOR LPAREN expr SEMICOLON cond . SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 207


State 204

   54 blockItems: blockItems . blockItem
   57 stmt_: LBRACE blockItems . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 137
    RBRACE      shift, and go to state 208
    CONST       shift, and go to state 5
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 144
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 145
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 146
    blockLBRACE      go to state 147
    blockItem        go to state 178
    stmt             go to state 150
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 205

   62 stmt: IF LPAREN cond RPAREN stmt_ ELSE . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 198
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 146
    blockLBRACE      go to state 147
    stmt_            go to state 209
    stmt             go to state 200
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 206

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond . SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 210


State 207

   66 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON . expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 211
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 208

   57 stmt_: LBRACE blockItems RBRACE .

    $default  reduce using rule 57 (stmt_)


State 209

   62 stmt: IF LPAREN cond RPAREN stmt_ ELSE stmt_ .

    $default  reduce using rule 62 (stmt)


State 210

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON . expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 212
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 211

   66 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr . RPAREN stmt_

    RPAREN  shift, and go to state 213


State 212

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr . RPAREN stmt_

    RPAREN  shift, and go to state 214


State 213

   66 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 198
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 146
    blockLBRACE      go to state 147
    stmt_            go to state 215
    stmt             go to state 200
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 214

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 136
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 198
    IF_         shift, and go to state 138
    WHILE_      shift, and go to state 139
    FOR_        shift, and go to state 140
    BREAK       shift, and go to state 141
    CONTINUE    shift, and go to state 142
    RETURN      shift, and go to state 143
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 146
    blockLBRACE      go to state 147
    stmt_            go to state 216
    stmt             go to state 200
    IF               go to state 151
    WHILE            go to state 152
    FOR              go to state 153
    expr             go to state 154
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 215

   66 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_ .

    $default  reduce using rule 66 (stmt)


State 216

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_ .

    $default  reduce using rule 65 (stmt)
