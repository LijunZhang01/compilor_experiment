Terminals unused in grammar

   T_STRING


State 21 conflicts: 1 shift/reduce
State 59 conflicts: 2 shift/reduce
State 60 conflicts: 3 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 2 shift/reduce
State 85 conflicts: 4 shift/reduce
State 119 conflicts: 3 shift/reduce
State 120 conflicts: 3 shift/reduce
State 149 conflicts: 1 shift/reduce
State 150 conflicts: 2 shift/reduce
State 151 conflicts: 4 shift/reduce
State 152 conflicts: 4 shift/reduce
State 202 conflicts: 24 shift/reduce
State 203 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl
    2        | funcDef
    3        | program decl
    4        | program funcDef

    5 basicType: T_INT
    6          | T_CHAR
    7          | T_BOOL
    8          | T_VOID

    9 compIdentifier: pIdentifier
   10               | arrayIdentifier

   11 pIdentifier: identifier
   12            | MUL pIdentifier
   13            | ADDR pIdentifier

   14 arrayIdentifier: pIdentifier LBRACKET expr RBRACKET
   15                | arrayIdentifier LBRACKET expr RBRACKET

   16 identifier: IDENTIFIER

   17 declCompIdentifier: pDeclIdentifier
   18                   | constArrayIdentifier

   19 pDeclIdentifier: declIdentifier
   20                | MUL pDeclIdentifier
   21                | ADDR pDeclIdentifier

   22 constArrayIdentifier: pDeclIdentifier LBRACKET INTEGER RBRACKET
   23                     | constArrayIdentifier LBRACKET INTEGER RBRACKET

   24 declIdentifier: IDENTIFIER

   25 decl: constDecl
   26     | varDecl

   27 constDecl: CONST basicType constDefs SEMICOLON

   28 constDefs: constDef
   29          | constDefs COMMA constDef

   30 constDef: pDeclIdentifier ASSIGN INTEGER
   31         | constArrayIdentifier ASSIGN LBRACE ArrayInitVal RBRACE

   32 ArrayInitVal: INTEGER
   33             | ArrayInitVal COMMA INTEGER

   34 varDecl: basicType varDefs SEMICOLON

   35 varDefs: varDef
   36        | varDefs COMMA varDef

   37 varDef: declCompIdentifier
   38       | declCompIdentifier ASSIGN expr
   39       | constArrayIdentifier ASSIGN LBRACE ArrayInitVal RBRACE

   40 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   41        | basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE

   42 funcLPAREN: LPAREN

   43 funcFParams: funcFParam
   44            | funcFParams COMMA funcFParam

   45 funcFParam: basicType pDeclIdentifier

   46 block: blockLBRACE blockItems blockRBRACE

   47 blockLBRACE: LBRACE

   48 blockRBRACE: RBRACE

   49 blockItems: blockItem
   50           | blockItems blockItem

   51 blockItem: decl
   52          | stmt

   53 stmt_: LBRACE blockItems RBRACE
   54      | stmt

   55 stmt: SEMICOLON
   56     | expr SEMICOLON
   57     | block
   58     | compIdentifier ASSIGN expr SEMICOLON
   59     | compIdentifier PLUSASSIGN expr SEMICOLON
   60     | compIdentifier MINUSASSIGN expr SEMICOLON
   61     | compIdentifier MULASSIGN expr SEMICOLON
   62     | compIdentifier DIVASSIGN expr SEMICOLON
   63     | IF LPAREN cond RPAREN stmt_ ELSE stmt_
   64     | IF LPAREN cond RPAREN stmt_
   65     | WHILE LPAREN cond RPAREN stmt_
   66     | FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   67     | FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_
   68     | BREAK SEMICOLON
   69     | CONTINUE SEMICOLON
   70     | RETURN SEMICOLON
   71     | RETURN expr SEMICOLON

   72 IF: IF_

   73 WHILE: WHILE_

   74 FOR: FOR_

   75 expr: andExpr

   76 cond: LOrExpr

   77 andExpr: mulExpr
   78        | andExpr PLUS mulExpr
   79        | andExpr MINUS mulExpr

   80 mulExpr: unaryExpr
   81        | mulExpr MUL unaryExpr
   82        | mulExpr DIV unaryExpr
   83        | mulExpr MOD unaryExpr

   84 unaryExpr: primaryExpr
   85          | PLUS expr
   86          | MINUS expr
   87          | NOT cond
   88          | pIdentifier INC
   89          | pIdentifier DEC

   90 primaryExpr: LPAREN expr RPAREN
   91            | pIdentifier LPAREN funcRParams RPAREN
   92            | pIdentifier LPAREN RPAREN
   93            | compIdentifier
   94            | INTEGER
   95            | BOOL
   96            | CHAR
   97            | STRING

   98 funcRParams: expr
   99            | funcRParams COMMA expr

  100 LOrExpr: LAndExpr
  101        | LOrExpr OR LAndExpr

  102 LAndExpr: eqExpr
  103         | LAndExpr AND eqExpr

  104 eqExpr: relExpr
  105       | eqExpr EQ relExpr
  106       | eqExpr NEQ relExpr

  107 relExpr: expr
  108        | relExpr GRA expr
  109        | relExpr LES expr
  110        | relExpr GRAEQ expr
  111        | relExpr LESEQ expr


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 6
T_INT (259) 5
T_STRING (260)
T_BOOL (261) 7
T_VOID (262) 8
ADDR (263) 13 21
ASSIGN (264) 30 31 38 39 58
PLUSASSIGN (265) 59
MINUSASSIGN (266) 60
MULASSIGN (267) 61
DIVASSIGN (268) 62
SEMICOLON (269) 27 34 55 56 58 59 60 61 62 66 67 68 69 70 71
COMMA (270) 29 33 36 44 99
LPAREN (271) 42 63 64 65 66 67 90 91 92
RPAREN (272) 40 41 63 64 65 66 67 90 91 92
LBRACE (273) 31 39 40 41 47 53
RBRACE (274) 31 39 40 41 48 53
LBRACKET (275) 14 15 22 23
RBRACKET (276) 14 15 22 23
CONST (277) 27
IF_ (278) 72
ELSE (279) 63
WHILE_ (280) 73
FOR_ (281) 74
BREAK (282) 68
CONTINUE (283) 69
RETURN (284) 70 71
EQ (285) 105
GRAEQ (286) 110
LESEQ (287) 111
NEQ (288) 106
GRA (289) 108
LES (290) 109
PLUS (291) 78 85
MINUS (292) 79 86
MUL (293) 12 20 81
DIV (294) 82
MOD (295) 83
AND (296) 103
OR (297) 101
NOT (298) 87
INC (299) 88
DEC (300) 89
IDENTIFIER (301) 16 24
INTEGER (302) 22 23 30 32 33 94
CHAR (303) 96
BOOL (304) 95
STRING (305) 97


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2 3 4, on right: 0 3 4
basicType (53)
    on left: 5 6 7 8, on right: 27 34 40 41 45 66
compIdentifier (54)
    on left: 9 10, on right: 58 59 60 61 62 93
pIdentifier (55)
    on left: 11 12 13, on right: 9 12 13 14 88 89 91 92
arrayIdentifier (56)
    on left: 14 15, on right: 10 15
identifier (57)
    on left: 16, on right: 11
declCompIdentifier (58)
    on left: 17 18, on right: 37 38
pDeclIdentifier (59)
    on left: 19 20 21, on right: 17 20 21 22 30 40 41 45
constArrayIdentifier (60)
    on left: 22 23, on right: 18 23 31 39
declIdentifier (61)
    on left: 24, on right: 19
decl (62)
    on left: 25 26, on right: 1 3 51
constDecl (63)
    on left: 27, on right: 25
constDefs (64)
    on left: 28 29, on right: 27 29
constDef (65)
    on left: 30 31, on right: 28 29
ArrayInitVal (66)
    on left: 32 33, on right: 31 33 39
varDecl (67)
    on left: 34, on right: 26
varDefs (68)
    on left: 35 36, on right: 34 36 66
varDef (69)
    on left: 37 38 39, on right: 35 36
funcDef (70)
    on left: 40 41, on right: 2 4
funcLPAREN (71)
    on left: 42, on right: 40 41
funcFParams (72)
    on left: 43 44, on right: 40 44
funcFParam (73)
    on left: 45, on right: 43 44
block (74)
    on left: 46, on right: 57
blockLBRACE (75)
    on left: 47, on right: 46
blockRBRACE (76)
    on left: 48, on right: 46
blockItems (77)
    on left: 49 50, on right: 40 41 46 50 53
blockItem (78)
    on left: 51 52, on right: 49 50
stmt_ (79)
    on left: 53 54, on right: 63 64 65 66 67
stmt (80)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71, on right:
    52 54
IF (81)
    on left: 72, on right: 63 64
WHILE (82)
    on left: 73, on right: 65
FOR (83)
    on left: 74, on right: 66 67
expr (84)
    on left: 75, on right: 14 15 38 56 58 59 60 61 62 66 67 71 85 86
    90 98 99 107 108 109 110 111
cond (85)
    on left: 76, on right: 63 64 65 66 67 87
andExpr (86)
    on left: 77 78 79, on right: 75 78 79
mulExpr (87)
    on left: 80 81 82 83, on right: 77 78 79 81 82 83
unaryExpr (88)
    on left: 84 85 86 87 88 89, on right: 80 81 82 83
primaryExpr (89)
    on left: 90 91 92 93 94 95 96 97, on right: 84
funcRParams (90)
    on left: 98 99, on right: 91 99
LOrExpr (91)
    on left: 100 101, on right: 76 101
LAndExpr (92)
    on left: 102 103, on right: 100 101 103
eqExpr (93)
    on left: 104 105 106, on right: 102 103 105 106
relExpr (94)
    on left: 107 108 109 110 111, on right: 104 105 106 108 109 110
    111


State 0

    0 $accept: . program $end

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    CONST   shift, and go to state 5

    program    go to state 6
    basicType  go to state 7
    decl       go to state 8
    constDecl  go to state 9
    varDecl    go to state 10
    funcDef    go to state 11


State 1

    6 basicType: T_CHAR .

    $default  reduce using rule 6 (basicType)


State 2

    5 basicType: T_INT .

    $default  reduce using rule 5 (basicType)


State 3

    7 basicType: T_BOOL .

    $default  reduce using rule 7 (basicType)


State 4

    8 basicType: T_VOID .

    $default  reduce using rule 8 (basicType)


State 5

   27 constDecl: CONST . basicType constDefs SEMICOLON

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4

    basicType  go to state 12


State 6

    0 $accept: program . $end
    3 program: program . decl
    4        | program . funcDef

    $end    shift, and go to state 13
    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    CONST   shift, and go to state 5

    basicType  go to state 7
    decl       go to state 14
    constDecl  go to state 9
    varDecl    go to state 10
    funcDef    go to state 15


State 7

   34 varDecl: basicType . varDefs SEMICOLON
   40 funcDef: basicType . pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   41        | basicType . pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier    go to state 19
    pDeclIdentifier       go to state 20
    constArrayIdentifier  go to state 21
    declIdentifier        go to state 22
    varDefs               go to state 23
    varDef                go to state 24


State 8

    1 program: decl .

    $default  reduce using rule 1 (program)


State 9

   25 decl: constDecl .

    $default  reduce using rule 25 (decl)


State 10

   26 decl: varDecl .

    $default  reduce using rule 26 (decl)


State 11

    2 program: funcDef .

    $default  reduce using rule 2 (program)


State 12

   27 constDecl: CONST basicType . constDefs SEMICOLON

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier       go to state 25
    constArrayIdentifier  go to state 26
    declIdentifier        go to state 22
    constDefs             go to state 27
    constDef              go to state 28


State 13

    0 $accept: program $end .

    $default  accept


State 14

    3 program: program decl .

    $default  reduce using rule 3 (program)


State 15

    4 program: program funcDef .

    $default  reduce using rule 4 (program)


State 16

   21 pDeclIdentifier: ADDR . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 29
    declIdentifier   go to state 22


State 17

   20 pDeclIdentifier: MUL . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 30
    declIdentifier   go to state 22


State 18

   24 declIdentifier: IDENTIFIER .

    $default  reduce using rule 24 (declIdentifier)


State 19

   37 varDef: declCompIdentifier .
   38       | declCompIdentifier . ASSIGN expr

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 37 (varDef)


State 20

   17 declCompIdentifier: pDeclIdentifier .
   22 constArrayIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET
   40 funcDef: basicType pDeclIdentifier . funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   41        | basicType pDeclIdentifier . funcLPAREN RPAREN LBRACE blockItems RBRACE

    LPAREN    shift, and go to state 32
    LBRACKET  shift, and go to state 33

    $default  reduce using rule 17 (declCompIdentifier)

    funcLPAREN  go to state 34


State 21

   18 declCompIdentifier: constArrayIdentifier .
   23 constArrayIdentifier: constArrayIdentifier . LBRACKET INTEGER RBRACKET
   39 varDef: constArrayIdentifier . ASSIGN LBRACE ArrayInitVal RBRACE

    ASSIGN    shift, and go to state 35
    LBRACKET  shift, and go to state 36

    ASSIGN    [reduce using rule 18 (declCompIdentifier)]
    $default  reduce using rule 18 (declCompIdentifier)


State 22

   19 pDeclIdentifier: declIdentifier .

    $default  reduce using rule 19 (pDeclIdentifier)


State 23

   34 varDecl: basicType varDefs . SEMICOLON
   36 varDefs: varDefs . COMMA varDef

    SEMICOLON  shift, and go to state 37
    COMMA      shift, and go to state 38


State 24

   35 varDefs: varDef .

    $default  reduce using rule 35 (varDefs)


State 25

   22 constArrayIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET
   30 constDef: pDeclIdentifier . ASSIGN INTEGER

    ASSIGN    shift, and go to state 39
    LBRACKET  shift, and go to state 33


State 26

   23 constArrayIdentifier: constArrayIdentifier . LBRACKET INTEGER RBRACKET
   31 constDef: constArrayIdentifier . ASSIGN LBRACE ArrayInitVal RBRACE

    ASSIGN    shift, and go to state 40
    LBRACKET  shift, and go to state 36


State 27

   27 constDecl: CONST basicType constDefs . SEMICOLON
   29 constDefs: constDefs . COMMA constDef

    SEMICOLON  shift, and go to state 41
    COMMA      shift, and go to state 42


State 28

   28 constDefs: constDef .

    $default  reduce using rule 28 (constDefs)


State 29

   21 pDeclIdentifier: ADDR pDeclIdentifier .

    $default  reduce using rule 21 (pDeclIdentifier)


State 30

   20 pDeclIdentifier: MUL pDeclIdentifier .

    $default  reduce using rule 20 (pDeclIdentifier)


State 31

   38 varDef: declCompIdentifier ASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 58
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 32

   42 funcLPAREN: LPAREN .

    $default  reduce using rule 42 (funcLPAREN)


State 33

   22 constArrayIdentifier: pDeclIdentifier LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 63


State 34

   40 funcDef: basicType pDeclIdentifier funcLPAREN . funcFParams RPAREN LBRACE blockItems RBRACE
   41        | basicType pDeclIdentifier funcLPAREN . RPAREN LBRACE blockItems RBRACE

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    RPAREN  shift, and go to state 64

    basicType    go to state 65
    funcFParams  go to state 66
    funcFParam   go to state 67


State 35

   39 varDef: constArrayIdentifier ASSIGN . LBRACE ArrayInitVal RBRACE

    LBRACE  shift, and go to state 68


State 36

   23 constArrayIdentifier: constArrayIdentifier LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 69


State 37

   34 varDecl: basicType varDefs SEMICOLON .

    $default  reduce using rule 34 (varDecl)


State 38

   36 varDefs: varDefs COMMA . varDef

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier    go to state 19
    pDeclIdentifier       go to state 70
    constArrayIdentifier  go to state 21
    declIdentifier        go to state 22
    varDef                go to state 71


State 39

   30 constDef: pDeclIdentifier ASSIGN . INTEGER

    INTEGER  shift, and go to state 72


State 40

   31 constDef: constArrayIdentifier ASSIGN . LBRACE ArrayInitVal RBRACE

    LBRACE  shift, and go to state 73


State 41

   27 constDecl: CONST basicType constDefs SEMICOLON .

    $default  reduce using rule 27 (constDecl)


State 42

   29 constDefs: constDefs COMMA . constDef

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier       go to state 25
    constArrayIdentifier  go to state 26
    declIdentifier        go to state 22
    constDef              go to state 74


State 43

   13 pIdentifier: ADDR . pIdentifier

    ADDR        shift, and go to state 43
    MUL         shift, and go to state 47
    IDENTIFIER  shift, and go to state 49

    pIdentifier  go to state 75
    identifier   go to state 57


State 44

   90 primaryExpr: LPAREN . expr RPAREN

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 76
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 45

   85 unaryExpr: PLUS . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 77
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 46

   86 unaryExpr: MINUS . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 78
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 47

   12 pIdentifier: MUL . pIdentifier

    ADDR        shift, and go to state 43
    MUL         shift, and go to state 47
    IDENTIFIER  shift, and go to state 49

    pIdentifier  go to state 79
    identifier   go to state 57


State 48

   87 unaryExpr: NOT . cond

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    cond             go to state 81
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    LOrExpr          go to state 82
    LAndExpr         go to state 83
    eqExpr           go to state 84
    relExpr          go to state 85


State 49

   16 identifier: IDENTIFIER .

    $default  reduce using rule 16 (identifier)


State 50

   94 primaryExpr: INTEGER .

    $default  reduce using rule 94 (primaryExpr)


State 51

   96 primaryExpr: CHAR .

    $default  reduce using rule 96 (primaryExpr)


State 52

   95 primaryExpr: BOOL .

    $default  reduce using rule 95 (primaryExpr)


State 53

   97 primaryExpr: STRING .

    $default  reduce using rule 97 (primaryExpr)


State 54

   93 primaryExpr: compIdentifier .

    $default  reduce using rule 93 (primaryExpr)


State 55

    9 compIdentifier: pIdentifier .
   14 arrayIdentifier: pIdentifier . LBRACKET expr RBRACKET
   88 unaryExpr: pIdentifier . INC
   89          | pIdentifier . DEC
   91 primaryExpr: pIdentifier . LPAREN funcRParams RPAREN
   92            | pIdentifier . LPAREN RPAREN

    LPAREN    shift, and go to state 86
    LBRACKET  shift, and go to state 87
    INC       shift, and go to state 88
    DEC       shift, and go to state 89

    $default  reduce using rule 9 (compIdentifier)


State 56

   10 compIdentifier: arrayIdentifier .
   15 arrayIdentifier: arrayIdentifier . LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 90

    $default  reduce using rule 10 (compIdentifier)


State 57

   11 pIdentifier: identifier .

    $default  reduce using rule 11 (pIdentifier)


State 58

   38 varDef: declCompIdentifier ASSIGN expr .

    $default  reduce using rule 38 (varDef)


State 59

   75 expr: andExpr .
   78 andExpr: andExpr . PLUS mulExpr
   79        | andExpr . MINUS mulExpr

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92

    PLUS      [reduce using rule 75 (expr)]
    MINUS     [reduce using rule 75 (expr)]
    $default  reduce using rule 75 (expr)


State 60

   77 andExpr: mulExpr .
   81 mulExpr: mulExpr . MUL unaryExpr
   82        | mulExpr . DIV unaryExpr
   83        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    MUL       [reduce using rule 77 (andExpr)]
    DIV       [reduce using rule 77 (andExpr)]
    MOD       [reduce using rule 77 (andExpr)]
    $default  reduce using rule 77 (andExpr)


State 61

   80 mulExpr: unaryExpr .

    $default  reduce using rule 80 (mulExpr)


State 62

   84 unaryExpr: primaryExpr .

    $default  reduce using rule 84 (unaryExpr)


State 63

   22 constArrayIdentifier: pDeclIdentifier LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 96


State 64

   41 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN . LBRACE blockItems RBRACE

    LBRACE  shift, and go to state 97


State 65

   45 funcFParam: basicType . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 98
    declIdentifier   go to state 22


State 66

   40 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams . RPAREN LBRACE blockItems RBRACE
   44 funcFParams: funcFParams . COMMA funcFParam

    COMMA   shift, and go to state 99
    RPAREN  shift, and go to state 100


State 67

   43 funcFParams: funcFParam .

    $default  reduce using rule 43 (funcFParams)


State 68

   39 varDef: constArrayIdentifier ASSIGN LBRACE . ArrayInitVal RBRACE

    INTEGER  shift, and go to state 101

    ArrayInitVal  go to state 102


State 69

   23 constArrayIdentifier: constArrayIdentifier LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 103


State 70

   17 declCompIdentifier: pDeclIdentifier .
   22 constArrayIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET

    LBRACKET  shift, and go to state 33

    $default  reduce using rule 17 (declCompIdentifier)


State 71

   36 varDefs: varDefs COMMA varDef .

    $default  reduce using rule 36 (varDefs)


State 72

   30 constDef: pDeclIdentifier ASSIGN INTEGER .

    $default  reduce using rule 30 (constDef)


State 73

   31 constDef: constArrayIdentifier ASSIGN LBRACE . ArrayInitVal RBRACE

    INTEGER  shift, and go to state 101

    ArrayInitVal  go to state 104


State 74

   29 constDefs: constDefs COMMA constDef .

    $default  reduce using rule 29 (constDefs)


State 75

   13 pIdentifier: ADDR pIdentifier .

    $default  reduce using rule 13 (pIdentifier)


State 76

   90 primaryExpr: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 105


State 77

   85 unaryExpr: PLUS expr .

    $default  reduce using rule 85 (unaryExpr)


State 78

   86 unaryExpr: MINUS expr .

    $default  reduce using rule 86 (unaryExpr)


State 79

   12 pIdentifier: MUL pIdentifier .

    $default  reduce using rule 12 (pIdentifier)


State 80

  107 relExpr: expr .

    $default  reduce using rule 107 (relExpr)


State 81

   87 unaryExpr: NOT cond .

    $default  reduce using rule 87 (unaryExpr)


State 82

   76 cond: LOrExpr .
  101 LOrExpr: LOrExpr . OR LAndExpr

    OR  shift, and go to state 106

    OR        [reduce using rule 76 (cond)]
    $default  reduce using rule 76 (cond)


State 83

  100 LOrExpr: LAndExpr .
  103 LAndExpr: LAndExpr . AND eqExpr

    AND  shift, and go to state 107

    AND       [reduce using rule 100 (LOrExpr)]
    $default  reduce using rule 100 (LOrExpr)


State 84

  102 LAndExpr: eqExpr .
  105 eqExpr: eqExpr . EQ relExpr
  106       | eqExpr . NEQ relExpr

    EQ   shift, and go to state 108
    NEQ  shift, and go to state 109

    EQ        [reduce using rule 102 (LAndExpr)]
    NEQ       [reduce using rule 102 (LAndExpr)]
    $default  reduce using rule 102 (LAndExpr)


State 85

  104 eqExpr: relExpr .
  108 relExpr: relExpr . GRA expr
  109        | relExpr . LES expr
  110        | relExpr . GRAEQ expr
  111        | relExpr . LESEQ expr

    GRAEQ  shift, and go to state 110
    LESEQ  shift, and go to state 111
    GRA    shift, and go to state 112
    LES    shift, and go to state 113

    GRAEQ     [reduce using rule 104 (eqExpr)]
    LESEQ     [reduce using rule 104 (eqExpr)]
    GRA       [reduce using rule 104 (eqExpr)]
    LES       [reduce using rule 104 (eqExpr)]
    $default  reduce using rule 104 (eqExpr)


State 86

   91 primaryExpr: pIdentifier LPAREN . funcRParams RPAREN
   92            | pIdentifier LPAREN . RPAREN

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    RPAREN      shift, and go to state 114
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 115
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    funcRParams      go to state 116


State 87

   14 arrayIdentifier: pIdentifier LBRACKET . expr RBRACKET

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 117
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 88

   88 unaryExpr: pIdentifier INC .

    $default  reduce using rule 88 (unaryExpr)


State 89

   89 unaryExpr: pIdentifier DEC .

    $default  reduce using rule 89 (unaryExpr)


State 90

   15 arrayIdentifier: arrayIdentifier LBRACKET . expr RBRACKET

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 118
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 91

   78 andExpr: andExpr PLUS . mulExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    mulExpr          go to state 119
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 92

   79 andExpr: andExpr MINUS . mulExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    mulExpr          go to state 120
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 93

   81 mulExpr: mulExpr MUL . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    unaryExpr        go to state 121
    primaryExpr      go to state 62


State 94

   82 mulExpr: mulExpr DIV . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    unaryExpr        go to state 122
    primaryExpr      go to state 62


State 95

   83 mulExpr: mulExpr MOD . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    unaryExpr        go to state 123
    primaryExpr      go to state 62


State 96

   22 constArrayIdentifier: pDeclIdentifier LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 22 (constArrayIdentifier)


State 97

   41 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 125
    CONST       shift, and go to state 5
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 132
    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    decl             go to state 134
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 135
    blockLBRACE      go to state 136
    blockItems       go to state 137
    blockItem        go to state 138
    stmt             go to state 139
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 98

   45 funcFParam: basicType pDeclIdentifier .

    $default  reduce using rule 45 (funcFParam)


State 99

   44 funcFParams: funcFParams COMMA . funcFParam

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4

    basicType   go to state 65
    funcFParam  go to state 144


State 100

   40 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN . LBRACE blockItems RBRACE

    LBRACE  shift, and go to state 145


State 101

   32 ArrayInitVal: INTEGER .

    $default  reduce using rule 32 (ArrayInitVal)


State 102

   33 ArrayInitVal: ArrayInitVal . COMMA INTEGER
   39 varDef: constArrayIdentifier ASSIGN LBRACE ArrayInitVal . RBRACE

    COMMA   shift, and go to state 146
    RBRACE  shift, and go to state 147


State 103

   23 constArrayIdentifier: constArrayIdentifier LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 23 (constArrayIdentifier)


State 104

   31 constDef: constArrayIdentifier ASSIGN LBRACE ArrayInitVal . RBRACE
   33 ArrayInitVal: ArrayInitVal . COMMA INTEGER

    COMMA   shift, and go to state 146
    RBRACE  shift, and go to state 148


State 105

   90 primaryExpr: LPAREN expr RPAREN .

    $default  reduce using rule 90 (primaryExpr)


State 106

  101 LOrExpr: LOrExpr OR . LAndExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    LAndExpr         go to state 149
    eqExpr           go to state 84
    relExpr          go to state 85


State 107

  103 LAndExpr: LAndExpr AND . eqExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    eqExpr           go to state 150
    relExpr          go to state 85


State 108

  105 eqExpr: eqExpr EQ . relExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    relExpr          go to state 151


State 109

  106 eqExpr: eqExpr NEQ . relExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    relExpr          go to state 152


State 110

  110 relExpr: relExpr GRAEQ . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 153
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 111

  111 relExpr: relExpr LESEQ . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 154
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 112

  108 relExpr: relExpr GRA . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 155
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 113

  109 relExpr: relExpr LES . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 156
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 114

   92 primaryExpr: pIdentifier LPAREN RPAREN .

    $default  reduce using rule 92 (primaryExpr)


State 115

   98 funcRParams: expr .

    $default  reduce using rule 98 (funcRParams)


State 116

   91 primaryExpr: pIdentifier LPAREN funcRParams . RPAREN
   99 funcRParams: funcRParams . COMMA expr

    COMMA   shift, and go to state 157
    RPAREN  shift, and go to state 158


State 117

   14 arrayIdentifier: pIdentifier LBRACKET expr . RBRACKET

    RBRACKET  shift, and go to state 159


State 118

   15 arrayIdentifier: arrayIdentifier LBRACKET expr . RBRACKET

    RBRACKET  shift, and go to state 160


State 119

   78 andExpr: andExpr PLUS mulExpr .
   81 mulExpr: mulExpr . MUL unaryExpr
   82        | mulExpr . DIV unaryExpr
   83        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    MUL       [reduce using rule 78 (andExpr)]
    DIV       [reduce using rule 78 (andExpr)]
    MOD       [reduce using rule 78 (andExpr)]
    $default  reduce using rule 78 (andExpr)


State 120

   79 andExpr: andExpr MINUS mulExpr .
   81 mulExpr: mulExpr . MUL unaryExpr
   82        | mulExpr . DIV unaryExpr
   83        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    MUL       [reduce using rule 79 (andExpr)]
    DIV       [reduce using rule 79 (andExpr)]
    MOD       [reduce using rule 79 (andExpr)]
    $default  reduce using rule 79 (andExpr)


State 121

   81 mulExpr: mulExpr MUL unaryExpr .

    $default  reduce using rule 81 (mulExpr)


State 122

   82 mulExpr: mulExpr DIV unaryExpr .

    $default  reduce using rule 82 (mulExpr)


State 123

   83 mulExpr: mulExpr MOD unaryExpr .

    $default  reduce using rule 83 (mulExpr)


State 124

   55 stmt: SEMICOLON .

    $default  reduce using rule 55 (stmt)


State 125

   47 blockLBRACE: LBRACE .

    $default  reduce using rule 47 (blockLBRACE)


State 126

   72 IF: IF_ .

    $default  reduce using rule 72 (IF)


State 127

   73 WHILE: WHILE_ .

    $default  reduce using rule 73 (WHILE)


State 128

   74 FOR: FOR_ .

    $default  reduce using rule 74 (FOR)


State 129

   68 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 161


State 130

   69 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 162


State 131

   70 stmt: RETURN . SEMICOLON
   71     | RETURN . expr SEMICOLON

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 163
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 164
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 132

   34 varDecl: basicType . varDefs SEMICOLON

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier    go to state 19
    pDeclIdentifier       go to state 70
    constArrayIdentifier  go to state 21
    declIdentifier        go to state 22
    varDefs               go to state 23
    varDef                go to state 24


State 133

   58 stmt: compIdentifier . ASSIGN expr SEMICOLON
   59     | compIdentifier . PLUSASSIGN expr SEMICOLON
   60     | compIdentifier . MINUSASSIGN expr SEMICOLON
   61     | compIdentifier . MULASSIGN expr SEMICOLON
   62     | compIdentifier . DIVASSIGN expr SEMICOLON
   93 primaryExpr: compIdentifier .

    ASSIGN       shift, and go to state 165
    PLUSASSIGN   shift, and go to state 166
    MINUSASSIGN  shift, and go to state 167
    MULASSIGN    shift, and go to state 168
    DIVASSIGN    shift, and go to state 169

    $default  reduce using rule 93 (primaryExpr)


State 134

   51 blockItem: decl .

    $default  reduce using rule 51 (blockItem)


State 135

   57 stmt: block .

    $default  reduce using rule 57 (stmt)


State 136

   46 block: blockLBRACE . blockItems blockRBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 125
    CONST       shift, and go to state 5
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 132
    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    decl             go to state 134
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 135
    blockLBRACE      go to state 136
    blockItems       go to state 170
    blockItem        go to state 138
    stmt             go to state 139
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 137

   41 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems . RBRACE
   50 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 125
    RBRACE      shift, and go to state 171
    CONST       shift, and go to state 5
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 132
    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    decl             go to state 134
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 135
    blockLBRACE      go to state 136
    blockItem        go to state 172
    stmt             go to state 139
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 138

   49 blockItems: blockItem .

    $default  reduce using rule 49 (blockItems)


State 139

   52 blockItem: stmt .

    $default  reduce using rule 52 (blockItem)


State 140

   63 stmt: IF . LPAREN cond RPAREN stmt_ ELSE stmt_
   64     | IF . LPAREN cond RPAREN stmt_

    LPAREN  shift, and go to state 173


State 141

   65 stmt: WHILE . LPAREN cond RPAREN stmt_

    LPAREN  shift, and go to state 174


State 142

   66 stmt: FOR . LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   67     | FOR . LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_

    LPAREN  shift, and go to state 175


State 143

   56 stmt: expr . SEMICOLON

    SEMICOLON  shift, and go to state 176


State 144

   44 funcFParams: funcFParams COMMA funcFParam .

    $default  reduce using rule 44 (funcFParams)


State 145

   40 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 125
    CONST       shift, and go to state 5
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 132
    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    decl             go to state 134
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 135
    blockLBRACE      go to state 136
    blockItems       go to state 177
    blockItem        go to state 138
    stmt             go to state 139
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 146

   33 ArrayInitVal: ArrayInitVal COMMA . INTEGER

    INTEGER  shift, and go to state 178


State 147

   39 varDef: constArrayIdentifier ASSIGN LBRACE ArrayInitVal RBRACE .

    $default  reduce using rule 39 (varDef)


State 148

   31 constDef: constArrayIdentifier ASSIGN LBRACE ArrayInitVal RBRACE .

    $default  reduce using rule 31 (constDef)


State 149

  101 LOrExpr: LOrExpr OR LAndExpr .
  103 LAndExpr: LAndExpr . AND eqExpr

    AND  shift, and go to state 107

    AND       [reduce using rule 101 (LOrExpr)]
    $default  reduce using rule 101 (LOrExpr)


State 150

  103 LAndExpr: LAndExpr AND eqExpr .
  105 eqExpr: eqExpr . EQ relExpr
  106       | eqExpr . NEQ relExpr

    EQ   shift, and go to state 108
    NEQ  shift, and go to state 109

    EQ        [reduce using rule 103 (LAndExpr)]
    NEQ       [reduce using rule 103 (LAndExpr)]
    $default  reduce using rule 103 (LAndExpr)


State 151

  105 eqExpr: eqExpr EQ relExpr .
  108 relExpr: relExpr . GRA expr
  109        | relExpr . LES expr
  110        | relExpr . GRAEQ expr
  111        | relExpr . LESEQ expr

    GRAEQ  shift, and go to state 110
    LESEQ  shift, and go to state 111
    GRA    shift, and go to state 112
    LES    shift, and go to state 113

    GRAEQ     [reduce using rule 105 (eqExpr)]
    LESEQ     [reduce using rule 105 (eqExpr)]
    GRA       [reduce using rule 105 (eqExpr)]
    LES       [reduce using rule 105 (eqExpr)]
    $default  reduce using rule 105 (eqExpr)


State 152

  106 eqExpr: eqExpr NEQ relExpr .
  108 relExpr: relExpr . GRA expr
  109        | relExpr . LES expr
  110        | relExpr . GRAEQ expr
  111        | relExpr . LESEQ expr

    GRAEQ  shift, and go to state 110
    LESEQ  shift, and go to state 111
    GRA    shift, and go to state 112
    LES    shift, and go to state 113

    GRAEQ     [reduce using rule 106 (eqExpr)]
    LESEQ     [reduce using rule 106 (eqExpr)]
    GRA       [reduce using rule 106 (eqExpr)]
    LES       [reduce using rule 106 (eqExpr)]
    $default  reduce using rule 106 (eqExpr)


State 153

  110 relExpr: relExpr GRAEQ expr .

    $default  reduce using rule 110 (relExpr)


State 154

  111 relExpr: relExpr LESEQ expr .

    $default  reduce using rule 111 (relExpr)


State 155

  108 relExpr: relExpr GRA expr .

    $default  reduce using rule 108 (relExpr)


State 156

  109 relExpr: relExpr LES expr .

    $default  reduce using rule 109 (relExpr)


State 157

   99 funcRParams: funcRParams COMMA . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 179
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 158

   91 primaryExpr: pIdentifier LPAREN funcRParams RPAREN .

    $default  reduce using rule 91 (primaryExpr)


State 159

   14 arrayIdentifier: pIdentifier LBRACKET expr RBRACKET .

    $default  reduce using rule 14 (arrayIdentifier)


State 160

   15 arrayIdentifier: arrayIdentifier LBRACKET expr RBRACKET .

    $default  reduce using rule 15 (arrayIdentifier)


State 161

   68 stmt: BREAK SEMICOLON .

    $default  reduce using rule 68 (stmt)


State 162

   69 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 69 (stmt)


State 163

   70 stmt: RETURN SEMICOLON .

    $default  reduce using rule 70 (stmt)


State 164

   71 stmt: RETURN expr . SEMICOLON

    SEMICOLON  shift, and go to state 180


State 165

   58 stmt: compIdentifier ASSIGN . expr SEMICOLON

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 181
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 166

   59 stmt: compIdentifier PLUSASSIGN . expr SEMICOLON

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 182
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 167

   60 stmt: compIdentifier MINUSASSIGN . expr SEMICOLON

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 183
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 168

   61 stmt: compIdentifier MULASSIGN . expr SEMICOLON

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 184
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 169

   62 stmt: compIdentifier DIVASSIGN . expr SEMICOLON

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 185
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 170

   46 block: blockLBRACE blockItems . blockRBRACE
   50 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 125
    RBRACE      shift, and go to state 186
    CONST       shift, and go to state 5
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 132
    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    decl             go to state 134
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 135
    blockLBRACE      go to state 136
    blockRBRACE      go to state 187
    blockItem        go to state 172
    stmt             go to state 139
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 171

   41 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE .

    $default  reduce using rule 41 (funcDef)


State 172

   50 blockItems: blockItems blockItem .

    $default  reduce using rule 50 (blockItems)


State 173

   63 stmt: IF LPAREN . cond RPAREN stmt_ ELSE stmt_
   64     | IF LPAREN . cond RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    cond             go to state 188
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    LOrExpr          go to state 82
    LAndExpr         go to state 83
    eqExpr           go to state 84
    relExpr          go to state 85


State 174

   65 stmt: WHILE LPAREN . cond RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    cond             go to state 189
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    LOrExpr          go to state 82
    LAndExpr         go to state 83
    eqExpr           go to state 84
    relExpr          go to state 85


State 175

   66 stmt: FOR LPAREN . basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   67     | FOR LPAREN . expr SEMICOLON cond SEMICOLON expr RPAREN stmt_

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 190
    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 191
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 176

   56 stmt: expr SEMICOLON .

    $default  reduce using rule 56 (stmt)


State 177

   40 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems . RBRACE
   50 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 125
    RBRACE      shift, and go to state 192
    CONST       shift, and go to state 5
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 132
    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    decl             go to state 134
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 135
    blockLBRACE      go to state 136
    blockItem        go to state 172
    stmt             go to state 139
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 178

   33 ArrayInitVal: ArrayInitVal COMMA INTEGER .

    $default  reduce using rule 33 (ArrayInitVal)


State 179

   99 funcRParams: funcRParams COMMA expr .

    $default  reduce using rule 99 (funcRParams)


State 180

   71 stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 71 (stmt)


State 181

   58 stmt: compIdentifier ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 193


State 182

   59 stmt: compIdentifier PLUSASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 194


State 183

   60 stmt: compIdentifier MINUSASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 195


State 184

   61 stmt: compIdentifier MULASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 196


State 185

   62 stmt: compIdentifier DIVASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 197


State 186

   48 blockRBRACE: RBRACE .

    $default  reduce using rule 48 (blockRBRACE)


State 187

   46 block: blockLBRACE blockItems blockRBRACE .

    $default  reduce using rule 46 (block)


State 188

   63 stmt: IF LPAREN cond . RPAREN stmt_ ELSE stmt_
   64     | IF LPAREN cond . RPAREN stmt_

    RPAREN  shift, and go to state 198


State 189

   65 stmt: WHILE LPAREN cond . RPAREN stmt_

    RPAREN  shift, and go to state 199


State 190

   66 stmt: FOR LPAREN basicType . varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier    go to state 19
    pDeclIdentifier       go to state 70
    constArrayIdentifier  go to state 21
    declIdentifier        go to state 22
    varDefs               go to state 200
    varDef                go to state 24


State 191

   67 stmt: FOR LPAREN expr . SEMICOLON cond SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 201


State 192

   40 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE .

    $default  reduce using rule 40 (funcDef)


State 193

   58 stmt: compIdentifier ASSIGN expr SEMICOLON .

    $default  reduce using rule 58 (stmt)


State 194

   59 stmt: compIdentifier PLUSASSIGN expr SEMICOLON .

    $default  reduce using rule 59 (stmt)


State 195

   60 stmt: compIdentifier MINUSASSIGN expr SEMICOLON .

    $default  reduce using rule 60 (stmt)


State 196

   61 stmt: compIdentifier MULASSIGN expr SEMICOLON .

    $default  reduce using rule 61 (stmt)


State 197

   62 stmt: compIdentifier DIVASSIGN expr SEMICOLON .

    $default  reduce using rule 62 (stmt)


State 198

   63 stmt: IF LPAREN cond RPAREN . stmt_ ELSE stmt_
   64     | IF LPAREN cond RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 202
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    block            go to state 135
    blockLBRACE      go to state 136
    stmt_            go to state 203
    stmt             go to state 204
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 199

   65 stmt: WHILE LPAREN cond RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 202
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    block            go to state 135
    blockLBRACE      go to state 136
    stmt_            go to state 205
    stmt             go to state 204
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 200

   36 varDefs: varDefs . COMMA varDef
   66 stmt: FOR LPAREN basicType varDefs . SEMICOLON cond SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 206
    COMMA      shift, and go to state 38


State 201

   67 stmt: FOR LPAREN expr SEMICOLON . cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    cond             go to state 207
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    LOrExpr          go to state 82
    LAndExpr         go to state 83
    eqExpr           go to state 84
    relExpr          go to state 85


State 202

   47 blockLBRACE: LBRACE .
   53 stmt_: LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 125
    CONST       shift, and go to state 5
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    T_CHAR      [reduce using rule 47 (blockLBRACE)]
    T_INT       [reduce using rule 47 (blockLBRACE)]
    T_BOOL      [reduce using rule 47 (blockLBRACE)]
    T_VOID      [reduce using rule 47 (blockLBRACE)]
    ADDR        [reduce using rule 47 (blockLBRACE)]
    SEMICOLON   [reduce using rule 47 (blockLBRACE)]
    LPAREN      [reduce using rule 47 (blockLBRACE)]
    LBRACE      [reduce using rule 47 (blockLBRACE)]
    CONST       [reduce using rule 47 (blockLBRACE)]
    IF_         [reduce using rule 47 (blockLBRACE)]
    WHILE_      [reduce using rule 47 (blockLBRACE)]
    FOR_        [reduce using rule 47 (blockLBRACE)]
    BREAK       [reduce using rule 47 (blockLBRACE)]
    CONTINUE    [reduce using rule 47 (blockLBRACE)]
    RETURN      [reduce using rule 47 (blockLBRACE)]
    PLUS        [reduce using rule 47 (blockLBRACE)]
    MINUS       [reduce using rule 47 (blockLBRACE)]
    MUL         [reduce using rule 47 (blockLBRACE)]
    NOT         [reduce using rule 47 (blockLBRACE)]
    IDENTIFIER  [reduce using rule 47 (blockLBRACE)]
    INTEGER     [reduce using rule 47 (blockLBRACE)]
    CHAR        [reduce using rule 47 (blockLBRACE)]
    BOOL        [reduce using rule 47 (blockLBRACE)]
    STRING      [reduce using rule 47 (blockLBRACE)]

    basicType        go to state 132
    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    decl             go to state 134
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 135
    blockLBRACE      go to state 136
    blockItems       go to state 208
    blockItem        go to state 138
    stmt             go to state 139
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 203

   63 stmt: IF LPAREN cond RPAREN stmt_ . ELSE stmt_
   64     | IF LPAREN cond RPAREN stmt_ .

    ELSE  shift, and go to state 209

    ELSE      [reduce using rule 64 (stmt)]
    $default  reduce using rule 64 (stmt)


State 204

   54 stmt_: stmt .

    $default  reduce using rule 54 (stmt_)


State 205

   65 stmt: WHILE LPAREN cond RPAREN stmt_ .

    $default  reduce using rule 65 (stmt)


State 206

   66 stmt: FOR LPAREN basicType varDefs SEMICOLON . cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 80
    cond             go to state 210
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62
    LOrExpr          go to state 82
    LAndExpr         go to state 83
    eqExpr           go to state 84
    relExpr          go to state 85


State 207

   67 stmt: FOR LPAREN expr SEMICOLON cond . SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 211


State 208

   50 blockItems: blockItems . blockItem
   53 stmt_: LBRACE blockItems . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 125
    RBRACE      shift, and go to state 212
    CONST       shift, and go to state 5
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 132
    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    decl             go to state 134
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 135
    blockLBRACE      go to state 136
    blockItem        go to state 172
    stmt             go to state 139
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 209

   63 stmt: IF LPAREN cond RPAREN stmt_ ELSE . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 202
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    block            go to state 135
    blockLBRACE      go to state 136
    stmt_            go to state 213
    stmt             go to state 204
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 210

   66 stmt: FOR LPAREN basicType varDefs SEMICOLON cond . SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 214


State 211

   67 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON . expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 215
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 212

   53 stmt_: LBRACE blockItems RBRACE .

    $default  reduce using rule 53 (stmt_)


State 213

   63 stmt: IF LPAREN cond RPAREN stmt_ ELSE stmt_ .

    $default  reduce using rule 63 (stmt)


State 214

   66 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON . expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 54
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    expr             go to state 216
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 215

   67 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr . RPAREN stmt_

    RPAREN  shift, and go to state 217


State 216

   66 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr . RPAREN stmt_

    RPAREN  shift, and go to state 218


State 217

   67 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 202
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    block            go to state 135
    blockLBRACE      go to state 136
    stmt_            go to state 219
    stmt             go to state 204
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 218

   66 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 124
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 202
    IF_         shift, and go to state 126
    WHILE_      shift, and go to state 127
    FOR_        shift, and go to state 128
    BREAK       shift, and go to state 129
    CONTINUE    shift, and go to state 130
    RETURN      shift, and go to state 131
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    compIdentifier   go to state 133
    pIdentifier      go to state 55
    arrayIdentifier  go to state 56
    identifier       go to state 57
    block            go to state 135
    blockLBRACE      go to state 136
    stmt_            go to state 220
    stmt             go to state 204
    IF               go to state 140
    WHILE            go to state 141
    FOR              go to state 142
    expr             go to state 143
    andExpr          go to state 59
    mulExpr          go to state 60
    unaryExpr        go to state 61
    primaryExpr      go to state 62


State 219

   67 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_ .

    $default  reduce using rule 67 (stmt)


State 220

   66 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_ .

    $default  reduce using rule 66 (stmt)
