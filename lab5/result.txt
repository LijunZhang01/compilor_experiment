@0	line 0	<program>,	child:	@1	@9	@39	
@1	line 2	<statment>, declaration	,	child:	@2	@3	
@2	line 2	<type>, int,	child:-	
@3	line 2	<variable list>,	child:	@4	
@4	line 2	<operation>, assign	,	child:	@5	@6	
@5	line 2	<var>,	name: s,	scope: 1 ,	child:-	
@6	line 2	<expression>,	child:	@7	
@7	line 2	<expression>,	child:	@8	
@8	line 2	<const>, int:0,	child:-	
@9	line 6	<statment>, declaration	,	child:	@10	@11	@12	@20	
@10	line 3	<type>, int,	child:-	
@11	line 3	<var>,	name: f,	scope: 1 ,	child:-	
@12	line 6	<variable list>,	child:	@13	
@13	line 3	<variable list>,	child:	@14	@17	
@14	line 3	function format parameter,	child:	@15	@16	
@15	line 3	<type>, int,	child:-	
@16	line 3	<var>,	name: x,	scope: 1 1 ,	child:-	
@17	line 3	function format parameter,	child:	@18	@19	
@18	line 3	<type>, int,	child:-	
@19	line 3	<var>,	name: y,	scope: 1 1 ,	child:-	
@20	line 6	<statment>, block	,	child:	@21	@35	
@21	line 4	<operation>, add assign	,	child:	@22	@23	
@22	line 2	<var>,	name: s,	scope: 1 ,	child:-	
@23	line 4	<expression>,	child:	@24	
@24	line 4	<operation>, add	,	child:	@25	@30	
@25	line 4	<operation>, multiply	,	child:	@26	@28	
@26	line 4	<expression>,	child:	@27	
@27	line 3	<var>,	name: x,	scope: 1 1 ,	child:-	
@28	line 4	<expression>,	child:	@29	
@29	line 3	<var>,	name: x,	scope: 1 1 ,	child:-	
@30	line 4	<operation>, multiply	,	child:	@31	@33	
@31	line 4	<expression>,	child:	@32	
@32	line 3	<var>,	name: y,	scope: 1 1 ,	child:-	
@33	line 4	<expression>,	child:	@34	
@34	line 3	<var>,	name: y,	scope: 1 1 ,	child:-	
@35	line 5	<statment>, return	,	child:	@36	
@36	line 5	<expression>,	child:	@37	
@37	line 5	<expression>,	child:	@38	
@38	line 2	<var>,	name: s,	scope: 1 ,	child:-	
@39	line 21	<statment>, declaration	,	child:	@40	@41	@42	@43	
@40	line 7	<type>, void,	child:-	
@41	line 7	<var>,	name: main,	scope: 1 ,	child:-	
@42	line 21	<variable list>,	child:-	
@43	line 21	<statment>, block	,	child:	@44	@52	@65	@69	@79	@93	
@44	line 8	<statment>, declaration	,	child:	@45	@46	
@45	line 8	<type>, int,	child:-	
@46	line 8	<variable list>,	child:	@47	
@47	line 8	<operation>, assign	,	child:	@48	@49	
@48	line 8	<var>,	name: i,	scope: 1 2 1 ,	child:-	
@49	line 8	<expression>,	child:	@50	
@50	line 8	<expression>,	child:	@51	
@51	line 8	<const>, int:0,	child:-	
@52	line 9	<statment>, declaration	,	child:	@53	@54	
@53	line 9	<type>, int,	child:-	
@54	line 9	<variable list>,	child:	@55	@60	
@55	line 9	<operation>, assign	,	child:	@56	@57	
@56	line 9	<var>,	name: a,	scope: 1 2 1 ,	child:-	
@57	line 9	<expression>,	child:	@58	
@58	line 9	<expression>,	child:	@59	
@59	line 9	<const>, int:1,	child:-	
@60	line 9	<operation>, assign	,	child:	@61	@62	
@61	line 9	<var>,	name: b,	scope: 1 2 1 ,	child:-	
@62	line 9	<expression>,	child:	@63	
@63	line 9	<expression>,	child:	@64	
@64	line 9	<const>, int:1,	child:-	
@65	line 10	<statment>, declaration	,	child:	@66	@67	
@66	line 10	<type>, int,	child:-	
@67	line 10	<variable list>,	child:	@68	
@68	line 10	<var>,	name: line,	scope: 1 2 1 ,	child:-	
@69	line 11	<expression>,	child:	@70	
@70	line 11	<statment>, function call	,	child:	@71	@72	
@71	line 0	<var>,	name: scanf,	scope: 1 ,	child:-	
@72	line 11	<variable list>,	child:	@73	@76	
@73	line 11	<expression>,	child:	@74	
@74	line 11	<expression>,	child:	@75	
@75	line 11	<const>, string:%d,	child:-	
@76	line 11	<expression>,	child:	@77	
@77	line 11	<expression>,	child:	@78	
@78	line 10	<var>,	name: line,	scope: 1 2 1 ,	child:-	
@79	line 13	<statment>, if	,	child:	@80	@88	
@80	line 12	<expression>,	child:	@81	
@81	line 12	<operation>, grater	,	child:	@82	@85	
@82	line 12	<expression>,	child:	@83	
@83	line 12	<expression>,	child:	@84	
@84	line 10	<var>,	name: line,	scope: 1 2 1 ,	child:-	
@85	line 12	<expression>,	child:	@86	
@86	line 12	<expression>,	child:	@87	
@87	line 12	<const>, int:10000,	child:-	
@88	line 12	<operation>, assign	,	child:	@89	@90	
@89	line 10	<var>,	name: line,	scope: 1 2 1 ,	child:-	
@90	line 12	<expression>,	child:	@91	
@91	line 12	<expression>,	child:	@92	
@92	line 12	<const>, int:10000,	child:-	
@93	line 20	<statment>, while	,	child:	@94	@98	
@94	line 13	<expression>,	child:	@95	
@95	line 13	<expression>,	child:	@96	
@96	line 13	<expression>,	child:	@97	
@97	line 13	<const>, bool:true,	child:-	
@98	line 20	<statment>, block	,	child:	@99	
@99	line 19	<statment>, if with else	,	child:	@100	@115	@126	
@100	line 14	<expression>,	child:	@101	
@101	line 14	<operation>, less	,	child:	@102	@112	
@102	line 14	<expression>,	child:	@103	
@103	line 14	<statment>, function call	,	child:	@104	@105	
@104	line 3	<var>,	name: f,	scope: 1 ,	child:-	
@105	line 14	<variable list>,	child:	@106	@109	
@106	line 14	<expression>,	child:	@107	
@107	line 14	<operation>, auto increment	,	child:	@108	
@108	line 9	<var>,	name: a,	scope: 1 2 1 ,	child:-	
@109	line 14	<expression>,	child:	@110	
@110	line 14	<operation>, auto increment	,	child:	@111	
@111	line 9	<var>,	name: b,	scope: 1 2 1 ,	child:-	
@112	line 14	<expression>,	child:	@113	
@113	line 14	<expression>,	child:	@114	
@114	line 10	<var>,	name: line,	scope: 1 2 1 ,	child:-	
@115	line 16	<statment>, block	,	child:	@116	
@116	line 15	<expression>,	child:	@117	
@117	line 15	<statment>, function call	,	child:	@118	@119	
@118	line 0	<var>,	name: printf,	scope: 1 ,	child:-	
@119	line 15	<variable list>,	child:	@120	@123	
@120	line 15	<expression>,	child:	@121	
@121	line 15	<expression>,	child:	@122	
@122	line 15	<const>, string:sum is: %d\n,	child:-	
@123	line 15	<expression>,	child:	@124	
@124	line 15	<expression>,	child:	@125	
@125	line 2	<var>,	name: s,	scope: 1 ,	child:-	
@126	line 19	<statment>, block	,	child:	@127	@137	
@127	line 17	<expression>,	child:	@128	
@128	line 17	<statment>, function call	,	child:	@129	@130	
@129	line 0	<var>,	name: printf,	scope: 1 ,	child:-	
@130	line 17	<variable list>,	child:	@131	@134	
@131	line 17	<expression>,	child:	@132	
@132	line 17	<expression>,	child:	@133	
@133	line 17	<const>, string:result is:%d\n,	child:-	
@134	line 17	<expression>,	child:	@135	
@135	line 17	<expression>,	child:	@136	
@136	line 2	<var>,	name: s,	scope: 1 ,	child:-	
@137	line 18	<statment>, break	,	child:-	
